<!DOCTYPE html>
<html lang="en">
  <%- include('./partials/head.ejs') %>
  <body>
    <!-- <% const title ='Dynamic content' %> declare
        
        <%= title %> binding to html-->
    <%- include('./partials/nav.ejs') %>

    <div id="itemContainer" class="container">
      <ul class="collection with-header">
        <% if (items.length> 0) {%> <% items.forEach(item=> {%>
        <li class="collection-item">
          <div>
            <%= item.name %> || <%= item.price %>
            <div class="secondary-content">
              <a style="cursor: pointer;">
                  <i class="material-icons red-text" data-id="<%= item._id %>">delete</i></a>
              <a class="modal-trigger" href="#edit_item_modal" style="cursor: pointer;">
                <i class="material-icons" data-id="<%= item._id %>">edit</i></a>
            </div>
          </div>
        </li>
        <% }); %> <%} else {%>
        <li class="collection-item">No items</li>
        <% }%>
      </ul>
    </div>

    <!-- Modal Structure -->
    <div id="edit_item_modal" class="modal">
      <div class="modal-content">
        <h4>Edit Form</h4>
        <form id="edit_form" action="">
          <input type="text" name="name" placeholder="Item Name"/>
          <input type="number" name="price" placeholder="Item Price"/>
          <button class="btn-small waves-effect waves-light" type="submit" name="action">
            Update
          </button>
        </form>
      </div>
    </div>

    <!-- add material script -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/js/materialize.min.js"></script>

    <script>
      let updateId;
      document.addEventListener('DOMContentLoaded', function () {
        var elems = document.querySelectorAll('.modal');
        var instances = M.Modal.init(elems);
      });

      edit_form.onsubmit = async (e) => {
        e.preventDefault();
        let data = new FormData(edit_form);

        let response = await fetch(`/item/${updateId}`, {
          method: 'PUT',
          body: new URLSearchParams(data),
          headers: new Headers({
            'Content-Type': 'application/x-www-form-urlencoded'
          })
        });

        let result = await response.json();
        edit_form.reset();
        window.location.reload();
      }

      itemContainer.onclick = (e) => {
        console.log('e.target.textContent', e.target.textContent)

        if(e.target.textContent === 'edit'){
          updateId = e.target.getAttribute('data-id');
          console.log(updateId);
        }
        if (e.target.textContent === 'delete') {
          // const id = deleteBtn.dataset.id
          const id = e.target.getAttribute('data-id');
          console.log(id)
          const endpoint = `/item/${id}`;
          fetch(endpoint, {
            method: 'DELETE'
          }).then(res => res.json()).
          then(data => {
            console.log('data', data)
            window.location.href = data.redirect
          }).
          catch(err => console.log(err))
        }
      }
    </script>
  </body>
</html>
